CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      properties: &props
        mainTexture:     { value: white         }
        offset:  { value: [0, 0, 0, 1] }
        strength:  { value: 1 }
}%
CCProgram unlit-vs %{
  precision highp float;
  #include <legacy/input>
  #include <builtin/uniforms/cc-global>
  #include <legacy/decode-base>
  #include <legacy/local-batch>
  out vec2 v_uv;
  
  uniform Constant {
    vec4 offset;
    float strength;
  };
  highp vec4 vert () {
    highp vec4 position;
    CCVertInput(position);
    
    highp mat4 matWorld;
    CCGetWorldMatrix(matWorld);
    vec4 p = (cc_matView * matWorld)*position;
    float d = strength/p.z;
    vec3 pos3 = offset.xyz * (d * d * d * d * d * d);
    vec4 pos = vec4(pos3.xyz,0);
    v_uv = a_texCoord;
    return cc_matProj * (cc_matView * matWorld) * position+pos;
  }
}%
CCProgram unlit-fs %{
  precision highp float;
  #include <legacy/output>
  in vec2 v_uv;
  uniform sampler2D mainTexture;
  vec4 frag () {
    vec4 o = texture(mainTexture, v_uv);
    return CCFragOutput(o);
  }
}%